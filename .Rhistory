paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big vector
## and then calculate the mean
for (i in id) {
print (paste0("..for id ", i))
dir <- path(directory,i)
print (paste0("..for file ", dir))
col <- pollutant_values (dir, pollutant)
all <- c(col,all)
}
print ("Aggregated column data is ")
print (head(all)
mean_value <- mean (all)
print (paste0("Mean is ",mean_value))
return (mean_value)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a vector containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big vector
## and then calculate the mean
for (i in id) {
print (paste0("..for id ", i))
dir <- path(directory,i)
print (paste0("..for file ", dir))
col <- pollutant_values (dir, pollutant)
all <- c(col,all)
}
print ("Aggregated column data is ")
print (head(all))
mean_value <- mean (all)
print (paste0("Mean is ",mean_value))
return (mean_value)
}
pollutantmean(dir,type,1)
class (all)
class (col)
class (coldata)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big list
## and then calculate the mean
all <- list()
for (i in 1:length(id)) {
print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
print (paste0("..for file ", dir))
all[[i]] <- pollutant_values (dir, pollutant)
}
print ("Aggregated column data is ")
print (head(all))
mean_value <- mean (all)
print (paste0("Mean is ",mean_value))
return (mean_value)
}
directory <- "/Users/david.wright/R_coursera/specdata"
pollutant <- "nitrate"
id <- 2
pollutantmean (directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big list
## and then calculate the mean
all <- list()
for (i in 1:length(id)) {
print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
print (paste0("..for file ", dir))
all[[1]] <- c(pollutant_values (dir, pollutant),all[[1]]
}
mean_value <- mean (all[[1]])
print (paste0("Mean is ",mean_value))
return (mean_value)
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big list
## and then calculate the mean
all <- list()
for (i in 1:length(id)) {
print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
print (paste0("..for file ", dir))
all[[1]] <- c(pollutant_values (dir, pollutant),all[[1]])
}
mean_value <- mean (all[[1]])
print (paste0("Mean is ",mean_value))
return (mean_value)
}
pollutantmean (directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into one big list
## and then calculate the mean
all[[1]] <- NULL
for (i in 1:length(id)) {
print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
print (paste0("..for file ", dir))
all[[1]] <- c(pollutant_values (dir, pollutant),all[[1]])
}
mean_value <- mean (all[[1]])
print (paste0("Mean is ",mean_value))
return (mean_value)
}
pollutantmean (directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into a larger
## sum and length, then compute the mean from these
sum_pvals <- 0
len_pvals <- 0
for (i in 1:length(id)) {
# print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
# print (paste0("..for file ", dir))
pvals <- pollutant_values (dir, pollutant)
sum_pvals <- sum_pvals + sum(pvals)
len_pvals <- len_pvals + length(pvals)
print (paste0("...new sum ", sum_pvals))
print (paste0("...new len ", len_pvals))
}
print (paste0("Mean is ",sum_pvals/len_pvals))
return (sum_pvals/len_pvals)
}
pollutantmean (directory, pollutant, id)
id <- 4:5
pollutantmean (directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into a larger
## sum and length, then compute the mean from these
sum_pvals <- 0
len_pvals <- 0
for (i in 1:length(id)) {
print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
print (paste0("..for file ", dir))
pvals <- pollutant_values (dir, pollutant)
sum_pvals <- sum_pvals + sum(pvals)
len_pvals <- len_pvals + length(pvals)
print (paste0("...new sum ", sum_pvals))
print (paste0("...new len ", len_pvals))
}
print (paste0("Mean is ",sum_pvals/len_pvals))
return (sum_pvals/len_pvals)
}
pollutantmean (directory, pollutant, id)
id <-13:18
pollutantmean (directory, pollutant, id)
id <-134:136
pollutantmean (directory, pollutant, id)
id <- 98:102
pollutantmean (directory, pollutant, id)
pollutant <- "sulfate"
pollutantmean (directory, pollutant, id)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## --------------------------------------
## function that returns a list containing the non-NA values
## for a specified pollutant in a specified path to a file
pollutant_values <- function(full_path, particle) {
content <- read.csv (full_path, head=TRUE, sep=",")
column <- content[,particle]
return (na.omit(column))
}
## function to create a path name for an id
## to be examined.  Files are 001.csv thru 332.csv
path <- function(dir, id) {
if ((id >= 1) && (id < 10)) {
prefix <- "00"
}
else if ((id >= 10) && (id < 100)) {
prefix <- "0"
}
else {
prefix <- ""
}
return (paste(dir,
paste(prefix,
paste(id,".csv",sep=""),sep=""),sep="/") )
}
## Aggregate the non-NA values for the pollutant into a larger
## sum and length, then compute the mean from these
sum_pvals <- 0
len_pvals <- 0
for (i in 1:length(id)) {
# print (paste0("..for id ", id[i]))
dir <- path(directory,id[i])
# print (paste0("..for file ", dir))
pvals <- pollutant_values (dir, pollutant)
sum_pvals <- sum_pvals + sum(pvals)
len_pvals <- len_pvals + length(pvals)
# print (paste0("...new sum ", sum_pvals))
# print (paste0("...new len ", len_pvals))
}
# print (paste0("Mean is ",sum_pvals/len_pvals))
return (sum_pvals/len_pvals)
}
pollutantmean (directory, pollutant, id)
source (pollutantmean.R)
source ("pollutantmean.R")
pwd
setwd("~/R_coursera")
setwd("~/R_coursera")
source ("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("complete")
source("complete")
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
submit()
3
submit()
submit()
submit()
submit()
submit()
source ("corr.R")
source ("corr.R")
source ("corr.R")
source ("complete.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
corr_vector
cr <- corr("specdata", 1)
source ("corr.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
source ("corr.R")
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
length(cr)
summary(cr)
submit()
submit()
submit()
source cachematrix.R
source ("cachematrix.R")
setwd("~/R_coursera/ProgrammingAssignment2")
source ("cachematrix.R")
x <- matrix(rnorm(25),nrow=5)
y <- makeCacheMatrix(x)
y$get()
cacheSolve(y)
cacheSolve(y)
source ("cachematrix.R")
x <- matrix(1:25,nrow=5)
y <- makeCacheMatrix(x)
y$get()
cacheSolve(y)
source ("cachematrix.R")
x <- matrix(rnorm(25),nrow=5)
y <- makeCacheMatrix(x)
y$get()
cacheSolve(y)
cacheSolve(y)
